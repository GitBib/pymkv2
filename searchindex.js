Search.setIndex({"alltitles":{"Advanced Usage":[[5,"advanced-usage"]],"Basic Usage":[[5,"basic-usage"]],"Core Functions":[[5,"core-functions"]],"Examples":[[5,"examples"]],"File Format Verification":[[5,"file-format-verification"]],"File Path Verification":[[5,"file-path-verification"]],"Indices and tables":[[0,"indices-and-tables"]],"Install":[[0,"install"]],"MKVAttachment":[[1,null]],"MKVFile":[[2,null]],"MKVToolNix Verification":[[5,"mkvtoolnix-verification"]],"MKVTrack":[[3,null]],"Modules":[[0,"modules"]],"Note":[[3,null]],"Timestamp":[[4,null]],"Utility Functions":[[5,"utility-functions"]],"Verifications":[[5,null]],"pymkv2":[[0,null]]},"docurls":["index.html","pymkv/MKVAttachment.html","pymkv/MKVFile.html","pymkv/MKVTrack.html","pymkv/Timestamp.html","pymkv/Verifications.html"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2},"indexentries":{"add_attachment() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.add_attachment",false]],"add_file() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.add_file",false]],"add_track() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.add_track",false]],"attach_once (pymkv.mkvattachment attribute)":[[1,"pymkv.MKVAttachment.attach_once",false]],"chapter_language (pymkv.mkvfile property)":[[2,"pymkv.MKVFile.chapter_language",false]],"chapters() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.chapters",false]],"checking_file_path() (in module pymkv)":[[5,"pymkv.checking_file_path",false]],"command() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.command",false]],"compression (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.compression",false]],"default_track (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.default_track",false]],"description (pymkv.mkvattachment attribute)":[[1,"pymkv.MKVAttachment.description",false]],"extract() (pymkv.mkvtrack method)":[[3,"pymkv.MKVTrack.extract",false]],"extract() (pymkv.timestamp method)":[[4,"pymkv.Timestamp.extract",false]],"file_id (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.file_id",false]],"file_path (pymkv.mkvattachment property)":[[1,"pymkv.MKVAttachment.file_path",false]],"file_path (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.file_path",false]],"flatten() (pymkv.mkvfile static method)":[[2,"pymkv.MKVFile.flatten",false]],"forced_track (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.forced_track",false]],"form (pymkv.timestamp property)":[[4,"pymkv.Timestamp.form",false]],"get_file_info() (in module pymkv)":[[5,"pymkv.get_file_info",false]],"get_track() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.get_track",false]],"global_tag_entries (pymkv.mkvfile property)":[[2,"pymkv.MKVFile.global_tag_entries",false]],"global_tags() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.global_tags",false]],"hh (pymkv.timestamp property)":[[4,"pymkv.Timestamp.hh",false]],"language (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.language",false]],"language_ietf (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.language_ietf",false]],"link_to_next() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.link_to_next",false]],"link_to_none() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.link_to_none",false]],"link_to_previous() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.link_to_previous",false]],"mime_type (pymkv.mkvattachment attribute)":[[1,"pymkv.MKVAttachment.mime_type",false]],"mkvattachment (class in pymkv)":[[1,"pymkv.MKVAttachment",false]],"mkvextract_path (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.mkvextract_path",false]],"mkvfile (class in pymkv)":[[2,"pymkv.MKVFile",false]],"mkvmerge_path (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.mkvmerge_path",false]],"mkvtrack (class in pymkv)":[[3,"pymkv.MKVTrack",false]],"mm (pymkv.timestamp property)":[[4,"pymkv.Timestamp.mm",false]],"move_track_backward() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.move_track_backward",false]],"move_track_end() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.move_track_end",false]],"move_track_forward() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.move_track_forward",false]],"move_track_front() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.move_track_front",false]],"mux() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.mux",false]],"name (pymkv.mkvattachment attribute)":[[1,"pymkv.MKVAttachment.name",false]],"nn (pymkv.timestamp property)":[[4,"pymkv.Timestamp.nn",false]],"no_attachments (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.no_attachments",false]],"no_attachments() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.no_attachments",false]],"no_chapters (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.no_chapters",false]],"no_chapters() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.no_chapters",false]],"no_global_tags (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.no_global_tags",false]],"no_global_tags() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.no_global_tags",false]],"no_track_tags (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.no_track_tags",false]],"no_track_tags() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.no_track_tags",false]],"order_tracks_by_file_id() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.order_tracks_by_file_id",false]],"pts (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.pts",false]],"remove_track() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.remove_track",false]],"replace_track() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.replace_track",false]],"split_chapters() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_chapters",false]],"split_duration() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_duration",false]],"split_frames() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_frames",false]],"split_none() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_none",false]],"split_parts_frames() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_parts_frames",false]],"split_size() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_size",false]],"split_timestamp_parts() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_timestamp_parts",false]],"split_timestamps() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.split_timestamps",false]],"splitting_timestamp() (pymkv.timestamp method)":[[4,"pymkv.Timestamp.splitting_timestamp",false]],"ss (pymkv.timestamp property)":[[4,"pymkv.Timestamp.ss",false]],"swap_tracks() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.swap_tracks",false]],"sync (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.sync",false]],"tag_entries (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.tag_entries",false]],"tags (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.tags",false]],"time (pymkv.timestamp property)":[[4,"pymkv.Timestamp.time",false]],"timestamp (class in pymkv)":[[4,"pymkv.Timestamp",false]],"track_codec (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.track_codec",false]],"track_id (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.track_id",false]],"track_name (pymkv.mkvtrack attribute)":[[3,"pymkv.MKVTrack.track_name",false]],"track_tags() (pymkv.mkvfile method)":[[2,"pymkv.MKVFile.track_tags",false]],"track_type (pymkv.mkvtrack property)":[[3,"pymkv.MKVTrack.track_type",false]],"ts (pymkv.timestamp property)":[[4,"pymkv.Timestamp.ts",false]],"verify() (pymkv.timestamp static method)":[[4,"pymkv.Timestamp.verify",false]],"verify_matroska() (in module pymkv)":[[5,"pymkv.verify_matroska",false]],"verify_mkvmerge() (in module pymkv)":[[5,"pymkv.verify_mkvmerge",false]],"verify_recognized() (in module pymkv)":[[5,"pymkv.verify_recognized",false]],"verify_supported() (in module pymkv)":[[5,"pymkv.verify_supported",false]]},"objects":{"pymkv":[[1,0,1,0,"MKVAttachment","A class that represents an MKV attachment for an MKVFile object."],[2,0,1,0,"MKVFile","A class that represents an MKV file."],[3,0,1,0,"MKVTrack","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[4,0,1,0,"Timestamp","Extracts time info from a timestamp."],[5,5,1,0,"checking_file_path","Check if a file path exists and is valid."],[5,5,1,0,"get_file_info","Get information about a media file using mkvmerge."],[5,5,1,0,"verify_matroska","Verify if a file is a valid Matroska file."],[5,5,1,0,"verify_mkvmerge","Verify if mkvmerge is available at the specified path."],[5,5,1,0,"verify_recognized","Verify if the file format is recognized by mkvmerge."],[5,5,1,0,"verify_supported","Verify if the file format is supported by mkvmerge."]],"pymkv.MKVAttachment":[[1,2,1,0,"attach_once","Determines if the attachment should be added to all split files or only the first. Default is False, which will attach to all files."],[1,2,1,0,"description","The description that will be given to the attachment when muxed into a file."],[1,3,1,0,"file_path","The path to the attachment file."],[1,2,1,0,"mime_type","The attachment's MIME type. The type will be guessed when file_path is set."],[1,2,1,0,"name","The name that will be given to the attachment when muxed into a file."]],"pymkv.MKVAttachment.__init__":[[1,1,2,0,"attach_once","Determines if the attachment should be added to all split files or only the first."],[1,1,2,0,"description","The description that will be given to the attachment when muxed into a file."],[1,1,2,0,"file_path","The path to the attachment file."],[1,1,2,0,"name","The name that will be given to the attachment when muxed into a file."]],"pymkv.MKVFile":[[2,4,1,0,"add_attachment","Add an attachment to the MKVFile."],[2,4,1,0,"add_file","Add an MKV file into the MKVFile object."],[2,4,1,0,"add_track","Add a track to the MKVFile."],[2,3,1,0,"chapter_language","Get the language code of the chapters in the MKVFile object."],[2,4,1,0,"chapters","Add a chapters file to the MKVFile object."],[2,4,1,0,"command","Generates an mkvmerge command based on the configured MKVFile."],[2,4,1,0,"flatten","Flatten a list or a tuple."],[2,4,1,0,"get_track","Get a MKVTrack from the MKVFile object."],[2,3,1,0,"global_tag_entries","Gets the number of global tag entries in the MKVFile object."],[2,4,1,0,"global_tags","Add global tags to the MKVFile object."],[2,4,1,0,"link_to_next","Link the output file as the successor of the file_path file."],[2,4,1,0,"link_to_none","Remove all linking to previous and next files."],[2,4,1,0,"link_to_previous","Link the output file as the predecessor of the file_path file."],[2,4,1,0,"move_track_backward","Move a track backward in the MKVFile object."],[2,4,1,0,"move_track_end","Set as track as the last in the MKVFile object."],[2,4,1,0,"move_track_forward","Move a track forward in the MKVFile object."],[2,4,1,0,"move_track_front","Set a track as the first in the MKVFile object."],[2,4,1,0,"mux","Mixes the specified MKVFile."],[2,4,1,0,"no_attachments","Ignore the existing attachments of all tracks in the MKVFile object."],[2,4,1,0,"no_chapters","Ignore the existing chapters of all tracks in the MKVFile object."],[2,4,1,0,"no_global_tags","Ignore the existing global tags of all tracks in the MKVFile object."],[2,4,1,0,"no_track_tags","Ignore the existing track tags of all tracks in the MKVFile object."],[2,4,1,0,"order_tracks_by_file_id","Assigns file IDs to tracks based on their source files."],[2,4,1,0,"remove_track","Remove a track from the MKVFile object."],[2,4,1,0,"replace_track","Replace a track with another track in the MKVFile object."],[2,4,1,0,"split_chapters","Split the output file into parts by chapters."],[2,4,1,0,"split_duration","Split the output file into parts by duration."],[2,4,1,0,"split_frames","Split the output file into parts by frames."],[2,4,1,0,"split_none","Remove all splitting options."],[2,4,1,0,"split_parts_frames","Split the output in parts by frames."],[2,4,1,0,"split_size","Split the output file into parts by size."],[2,4,1,0,"split_timestamp_parts","Split the output in parts by time parts."],[2,4,1,0,"split_timestamps","Split the output file into parts by timestamps."],[2,4,1,0,"swap_tracks","Swap the position of two tracks in the MKVFile object."],[2,4,1,0,"track_tags","Include or exclude tags from specific tracks."]],"pymkv.MKVFile.__init__":[[2,1,2,0,"file_path","Path to a pre-existing MKV file."],[2,1,2,0,"mkvmerge_path","The path where pymkv looks for the mkvmerge executable."],[2,1,2,0,"title","The internal title given to the MKVFile."]],"pymkv.MKVFile.add_attachment":[[2,1,2,0,"attachment","The attachment to be added to the MKVFile object."]],"pymkv.MKVFile.add_file":[[2,1,2,0,"file","The file to be combined with the MKVFile object."]],"pymkv.MKVFile.add_track":[[2,1,2,0,"new_file","If set to True, the file_id for the added track is not incremented."],[2,1,2,0,"track","The track to be added to the MKVFile object."]],"pymkv.MKVFile.chapters":[[2,1,2,0,"file_path","The chapters file to be added to the MKVFile object."],[2,1,2,0,"language","Must be an ISO639-2 language code."]],"pymkv.MKVFile.command":[[2,1,2,0,"output_path","The path to be used as the output file in the mkvmerge command."],[2,1,2,0,"subprocess","Will return the command as a list so it can be used easily with the subprocess module."]],"pymkv.MKVFile.flatten":[[2,1,2,0,"item","A list or a tuple object with nested lists or tuples to be flattened."]],"pymkv.MKVFile.get_track":[[2,1,2,0,"track_num","Index of track to retrieve."]],"pymkv.MKVFile.global_tags":[[2,1,2,0,"file_path","The tags file to be added to the MKVFile object."]],"pymkv.MKVFile.link_to_next":[[2,1,2,0,"file_path","Path of the file to be linked to."]],"pymkv.MKVFile.link_to_previous":[[2,1,2,0,"file_path","Path of the file to be linked to."]],"pymkv.MKVFile.move_track_backward":[[2,1,2,0,"track_num","The track number of the track to move backward."]],"pymkv.MKVFile.move_track_end":[[2,1,2,0,"track_num","The track number of the track to move to the back."]],"pymkv.MKVFile.move_track_forward":[[2,1,2,0,"track_num","The track number of the track to move forward."]],"pymkv.MKVFile.move_track_front":[[2,1,2,0,"track_num","The track number of the track to move to the front."]],"pymkv.MKVFile.mux":[[2,1,2,0,"ignore_warning","If set to True, the muxing process will ignore any warnings (exit code 1) from mkvmerge."],[2,1,2,0,"output_path","The path to be used as the output file in the mkvmerge command."],[2,1,2,0,"silent","By default the mkvmerge output will be shown unless silent is True."]],"pymkv.MKVFile.remove_track":[[2,1,2,0,"track_num","The track number of the track to remove."]],"pymkv.MKVFile.replace_track":[[2,1,2,0,"track","The MKVTrack to be replaced into the file."],[2,1,2,0,"track_num","The track number of the track to replace."]],"pymkv.MKVFile.split_chapters":[[2,1,2,0,"chapters","The chapters to split the file by."],[2,1,2,0,"link","Determines if the split files should be linked together after splitting."]],"pymkv.MKVFile.split_duration":[[2,1,2,0,"duration","The duration of each split file."],[2,1,2,0,"link","Determines if the split files should be linked together after splitting."]],"pymkv.MKVFile.split_frames":[[2,1,2,0,"frames","The frames to split the file by."],[2,1,2,0,"link","Determines if the split files should be linked together after splitting."]],"pymkv.MKVFile.split_parts_frames":[[2,1,2,0,"frame_parts","An Iterable of frame sets."],[2,1,2,0,"link","Determines if the split files should be linked together after splitting."]],"pymkv.MKVFile.split_size":[[2,1,2,0,"link","Determines if the split files should be linked together after splitting."],[2,1,2,0,"size","The size of each split file."]],"pymkv.MKVFile.split_timestamp_parts":[[2,1,2,0,"link","Determines if the split files should be linked together after splitting."],[2,1,2,0,"timestamp_parts","An Iterable of timestamp sets."]],"pymkv.MKVFile.split_timestamps":[[2,1,2,0,"link","Determines if the split files should be linked together after splitting."],[2,1,2,0,"timestamps","The timestamps to split the file by."]],"pymkv.MKVFile.swap_tracks":[[2,1,2,0,"track_num_1","The track number of one track to swap."],[2,1,2,0,"track_num_2","The track number of the other track to swap"]],"pymkv.MKVFile.track_tags":[[2,1,2,0,"exclusive","Determines if the track_ids should have their tags kept or removed."],[2,1,2,0,"track_ids","Track ids to have tags included or excluded from."]],"pymkv.MKVTrack":[[3,2,1,0,"compression","Determines if the track should be compressed when muxed into an MKV file."],[3,2,1,0,"default_track","Determines if the track should be the default track of its type when muxed into an MKV file."],[3,4,1,0,"extract","Extract the track as a file."],[3,3,1,0,"file_id","Get the ID of the file the track belongs to."],[3,3,1,0,"file_path","Get the path to the track or MKV file containing the desired track."],[3,2,1,0,"forced_track","Determines if the track should be a forced track when muxed into an MKV file."],[3,3,1,0,"language","Get the language of the track."],[3,3,1,0,"language_ietf","Get the language of the track with BCP47 format."],[3,2,1,0,"mkvextract_path","The path of the mkvextract executable."],[3,2,1,0,"mkvmerge_path","The path of the mkvmerge executable."],[3,2,1,0,"no_attachments","If attachments exist in the track file, don't include them when this MKVTrack object is a track in an MKVFile mux operation. This option has no effect on standalone track files, only tracks that are already part of an MKV file."],[3,2,1,0,"no_chapters","If chapters exist in the track file, don't include them when this MKVTrack object is a track in an MKVFile mux operation. This option has no effect on standalone track files, only tracks that are already part of an MKV file."],[3,2,1,0,"no_global_tags","If global tags exist in the track file, don't include them when this MKVTrack object is a track in an MKVFile mux operation. This option has no effect on standalone track files, only tracks that are already part of an MKV file."],[3,2,1,0,"no_track_tags","If track tags exist in the specified track within the track file, don't include them when this MKVTrack object is a track in an MKVFile mux operation. This option has no effect on standalone track files, only tracks that are already part of an MKV file."],[3,3,1,0,"pts","Get the Presentation Timestamp (PTS) of the track."],[3,3,1,0,"sync","Get the synchronization offset for the track."],[3,3,1,0,"tag_entries","Gets the number of existing tag entries in the track."],[3,3,1,0,"tags","Get the tags file to include with the track."],[3,3,1,0,"track_codec","Get the codec of the track."],[3,3,1,0,"track_id","Get the ID of the track within the file."],[3,2,1,0,"track_name","The name that will be given to the track when muxed into a file."],[3,3,1,0,"track_type","Get the type of the track."]],"pymkv.MKVTrack.__init__":[[3,1,2,0,"compression","Determines if the track should be compressed when muxed into an MKV file."],[3,1,2,0,"default_track","Determines if the track should be the default track of its type when muxed into an MKV file."],[3,1,2,"pymkv.MKVTrack","existing_info","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,0,"file_path","Path to the track file."],[3,1,2,"pymkv.MKVTrack","flag_commentary","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,"pymkv.MKVTrack","flag_hearing_impaired","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,"pymkv.MKVTrack","flag_original","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,"pymkv.MKVTrack","flag_visual_impaired","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,0,"forced_track","Determines if the track should be a forced track when muxed into an MKV file."],[3,1,2,0,"language","The language of the track."],[3,1,2,0,"language_ietf","The language of the track."],[3,1,2,0,"mkvextract_path","The path where pymkv looks for the mkvextract executable."],[3,1,2,0,"mkvmerge_path","The path where pymkv looks for the mkvmerge executable."],[3,1,2,"pymkv.MKVTrack","sync","A class that represents a track for an MKVFile object. MKVTrack objects are video, audio, or subtitles. Tracks can be standalone files or a single track within an MKV file, both can be handled by pymkv. An MKVTrack object can be added to an MKVFile and will be included when the MKV is muxed."],[3,1,2,0,"tag_entries","The number of tag entries."],[3,1,2,0,"track_id","The id of the track to be used from the file."],[3,1,2,0,"track_name","The name that will be given to the track when muxed into a file."]],"pymkv.MKVTrack.extract":[[3,1,2,0,"output_path","The path to be used as the output file"],[3,1,2,0,"silent","By default the mkvmerge output will be shown unless silent is True."]],"pymkv.Timestamp":[[4,4,1,0,"extract","Extracts time info from a timestamp."],[4,3,1,0,"form","Get the format string for the timestamp."],[4,3,1,0,"hh","Get the hours component of the timestamp."],[4,3,1,0,"mm","Get the minutes component of the timestamp."],[4,3,1,0,"nn","Get the nanoseconds component of the timestamp."],[4,4,1,0,"splitting_timestamp","This method splits the given timestamp string into hours, minutes, seconds, and nanoseconds. The timestamp string should be in the format \"HH:MM:SS.NNNNNNNNN\", where HH represents hours, MM represents minutes, SS represents seconds, and NNNNNNNNN represents nanoseconds."],[4,3,1,0,"ss","Get the seconds component of the timestamp."],[4,3,1,0,"time","Get the total time in seconds represented by the timestamp."],[4,3,1,0,"ts","Generates and returns the timestamp string specified by the object."],[4,4,1,0,"verify","Verify a timestamp has the proper form to be used in mkvmerge."]],"pymkv.Timestamp.__init__":[[4,1,2,"pymkv.Timestamp","form","Extracts time info from a timestamp."],[4,1,2,"pymkv.Timestamp","hh","Extracts time info from a timestamp."],[4,1,2,"pymkv.Timestamp","mm","Extracts time info from a timestamp."],[4,1,2,"pymkv.Timestamp","nn","Extracts time info from a timestamp."],[4,1,2,"pymkv.Timestamp","ss","Extracts time info from a timestamp."],[4,1,2,"pymkv.Timestamp","timestamp","Extracts time info from a timestamp."]],"pymkv.Timestamp.extract":[[4,1,2,"pymkv.Timestamp.extract","timestamp","Extracts time info from a timestamp."]],"pymkv.Timestamp.splitting_timestamp":[[4,1,2,0,"timestamp","The timestamp string to be split."]],"pymkv.Timestamp.verify":[[4,1,2,"pymkv.Timestamp.verify","timestamp","Verify a timestamp has the proper form to be used in mkvmerge."]],"pymkv.checking_file_path":[[5,1,2,0,"file_path","The path to the file that needs to be checked."]],"pymkv.get_file_info":[[5,1,2,0,"check_path","Whether to check and validate the file path."],[5,1,2,0,"file_path","The path to the media file to analyze."],[5,1,2,0,"mkvmerge_path","The path to the mkvmerge executable or a list of command parts."]],"pymkv.verify_matroska":[[5,1,2,0,"file_path","The path to the Matroska file to be verified."],[5,1,2,0,"mkvmerge_path","The path to the mkvmerge executable."]],"pymkv.verify_mkvmerge":[[5,1,2,0,"mkvmerge_path","The path to the mkvmerge executable."]],"pymkv.verify_recognized":[[5,1,2,0,"file_path","The path to the file that will be verified."],[5,1,2,0,"mkvmerge_path","The path to the mkvmerge executable."]],"pymkv.verify_supported":[[5,1,2,0,"file_path","The path to the file that will be verified."],[5,1,2,0,"mkvmerge_path","The path to the mkvmerge executable."]]},"objnames":{"0":["py","class","Python class"],"1":["py","parameter","Python parameter"],"2":["py","attribute","Python attribute"],"3":["py","property","Python property"],"4":["py","method","Python method"],"5":["py","function","Python function"]},"objtypes":{"0":"py:class","1":"py:parameter","2":"py:attribute","3":"py:property","4":"py:method","5":"py:function"},"terms":{"":[1,2,3,4,5],"0":[2,3],"1":[2,3],"1000":3,"12":4,"2":[2,3],"3":2,"34":4,"4":2,"5":[2,3],"500":3,"56":4,"639":[2,3],"789012345":4,"A":[1,2,3,4,5],"By":[2,3],"If":[0,2,3,5],"In":3,"It":[2,3],"The":[0,1,2,3,4,5],"Then":5,"To":0,"Will":2,"_hh":4,"_mm":4,"_nn":4,"_ss":4,"aac":[2,3],"abc":2,"about":[2,5],"accept":4,"accord":4,"accur":3,"ad":[1,2,3],"add":[0,1,2],"add_attach":[1,2],"add_fil":2,"add_track":[2,3],"adjust":3,"advanc":3,"after":2,"all":[1,2,3,4,5],"allow":[2,3],"alreadi":[2,3],"also":[0,1,3],"alwai":2,"an":[0,1,2,3,4,5],"analyz":5,"ani":[2,3,5],"anoth":2,"appli":2,"applic":4,"ar":[0,1,2,3,4],"argument":2,"assert":4,"assign":2,"associ":3,"assum":[2,3,4],"attach":[0,1,2,3],"attach_onc":1,"attribut":[2,4],"audio":[2,3],"avail":5,"back":2,"backward":2,"base":[2,4],"basic":[1,2,3],"bcp47":3,"becaus":3,"been":2,"being":3,"belong":3,"below":[1,2,3],"between":3,"bitmath":2,"bool":[1,2,3,4,5],"both":[1,3],"byte":2,"calledprocesserror":5,"can":[0,1,2,3,5],"cannot":[2,5],"case":3,"chang":2,"chapter":[2,3],"chapter_languag":2,"check":5,"check_path":5,"checking_file_path":5,"class":[0,1,2,3,4],"clear":2,"clone":0,"code":[0,2,3],"codec":3,"combin":2,"command":[0,2,3,5],"complet":0,"compon":4,"compress":3,"configur":2,"construct":4,"contain":[2,3,5],"core":[0,2],"correspond":2,"could":[2,5],"creat":[0,1,2,3],"current":[2,3],"d":2,"default":[1,2,3,5],"default_track":3,"delai":3,"descript":1,"desir":3,"detail":[2,5],"determin":[1,2,3,4],"dict":[3,5],"dictionari":5,"directli":1,"doc":0,"document":0,"doe":[1,2,3,5],"don":3,"durat":2,"dure":5,"e":0,"each":[0,2],"earlier":3,"easili":2,"edit":0,"effect":[2,3],"either":2,"eng":3,"ensur":3,"entri":[2,3],"error":[0,2,5],"even":2,"exact":3,"exampl":[0,1,2,3,4],"except":2,"exclud":2,"exclus":2,"execut":[2,3,5],"exist":[0,1,2,3,5],"existing_info":3,"exit":[2,5],"expand":5,"extern":2,"extract":[3,4],"fail":[2,5],"failur":2,"fals":[1,2,3,5],"file":[0,1,2,3],"file1":2,"file2":2,"file_id":[2,3],"file_path":[1,2,3,5],"filenotfounderror":[1,2,3,5],"filesystem":2,"find":0,"first":[1,2,3,5],"flag_commentari":3,"flag_hearing_impair":3,"flag_origin":3,"flag_visual_impair":3,"flatten":2,"follow":0,"forc":3,"forced_track":3,"form":[2,4],"format":[2,3,4],"forward":2,"found":5,"four":2,"frame":[2,3],"frame_part":2,"from":[0,1,2,3,4,5],"front":2,"full":2,"fulli":5,"function":0,"further":5,"gener":[2,4],"get":[2,3,4,5],"get_file_info":5,"get_track":2,"given":[1,2,3,4],"global":[2,3],"global_tag":2,"global_tag_entri":2,"guess":1,"h264":[2,3],"ha":[2,3,4],"handl":3,"have":[2,3],"here":[0,5],"hh":[2,4],"hour":4,"how":[0,1,2,3],"i":[0,1,2,3,4,5],"id":[2,3],"ident":2,"ignor":2,"ignore_warn":2,"import":[0,1,2,3,5],"improperli":2,"includ":[2,3,4,5],"increment":2,"index":[0,2,3],"indexerror":[2,3],"indic":3,"individu":0,"info":4,"inform":[2,5],"initi":4,"insid":2,"instanti":2,"int":[2,3,4],"integ":2,"intern":2,"invalid":2,"iso":[2,3],"iso639":[2,3],"issu":[0,2],"item":2,"iter":[2,3,5],"its":[2,3],"jpg":1,"json":5,"jsondecodeerror":5,"kept":2,"languag":[2,3],"language_ietf":3,"last":2,"later":3,"least":2,"like":2,"line":5,"link":[0,2],"link_to_next":2,"link_to_non":2,"link_to_previ":2,"list":[2,3,5],"locat":[2,3],"look":[2,3],"m":2,"mani":0,"map":2,"matroska":5,"media":5,"messag":2,"method":[2,4],"might":5,"millisecond":3,"mime":1,"mime_typ":1,"mimic":0,"minut":4,"miss":0,"mix":2,"mkv":[0,1,2,3,5],"mkv1":2,"mkv2":2,"mkvattach":[0,2],"mkvextract":3,"mkvextract_path":3,"mkvfile":[0,1,3],"mkvmerg":[0,2,3,4,5],"mkvmerge_path":[2,3,5],"mkvtrack":[0,2],"mm":[2,4],"modifi":2,"modul":[2,5],"more":2,"move":2,"move_track_backward":2,"move_track_end":2,"move_track_forward":2,"move_track_front":2,"multimedia":3,"multipl":[3,5],"must":[2,3],"mux":[1,2,3],"name":[1,3],"nanosecond":4,"necessarili":0,"need":[2,3,5],"neg":3,"nest":2,"new":[0,1,2,3],"new_fil":2,"next":2,"nn":4,"nnnnnnnnn":[2,4],"no_attach":[2,3],"no_chapt":[2,3],"no_global_tag":[2,3],"no_track_tag":[2,3],"non":[2,4,5],"none":[1,2,3,4,5],"note":5,"now":[1,3],"number":[2,3],"numer":2,"o":[3,5],"obj":4,"object":[1,2,3,4,5],"occur":5,"offset":3,"omit":4,"one":[2,3],"onli":[1,2,3],"open":[0,5],"oper":[0,3,5],"option":[1,2,3,5],"order":2,"order_tracks_by_file_id":2,"origin":2,"other":[1,2],"otherwis":5,"out":[2,3],"output":[1,2,3,5],"output_path":[2,3],"outsid":2,"over":3,"page":0,"pair":2,"paramet":[1,2,3,4,5],"pars":[2,3,5],"part":[2,3,4,5],"particularli":3,"pass":[2,3],"path":[1,2,3],"pathlik":[2,3,5],"permit":2,"pip":0,"pleas":0,"png":1,"posit":[2,3],"pre":2,"predecessor":2,"prerequisit":5,"presenc":4,"present":3,"preserv":2,"prevent":3,"previou":2,"primari":0,"print":[4,5],"prioriti":3,"process":2,"project":0,"proper":4,"properti":[1,2,3,4],"provid":[2,5],"pt":3,"pymkv":[1,2,3,4,5],"pypi":0,"rais":[1,2,3,5],"rang":[2,3],"recogn":5,"reli":[2,3],"remov":2,"remove_track":2,"reorder":2,"replac":2,"replace_track":2,"repo":0,"repres":[1,2,3,4],"requir":2,"resolv":5,"respect":2,"retriev":2,"return":[2,3,4,5],"root":0,"run":0,"same":[0,2],"sampl":3,"scenario":2,"search":0,"second":[2,3,4],"see":3,"self":[2,4],"set":[1,2,3,4],"shell":[2,3],"shift":3,"should":[1,2,3,4],"show":5,"shown":[2,3],"silent":[2,3],"simpl":5,"singl":[2,3],"size":2,"so":2,"some":[1,2,3],"sourc":[0,2],"space":2,"specif":[2,3],"specifi":[2,3,4,5],"split":[1,2,4],"split_chapt":2,"split_dur":2,"split_fram":2,"split_non":2,"split_parts_fram":2,"split_siz":2,"split_timestamp":2,"split_timestamp_part":2,"splitting_timestamp":4,"ss":[2,4],"standalon":[2,3],"static":[2,4],"statu":[2,5],"store":2,"str":[1,2,3,4,5],"stream":3,"string":[2,4,5],"subprocess":[2,5],"subtitl":3,"successor":2,"support":[0,3,5],"swap":2,"swap_track":2,"sync":3,"synchron":3,"t":[2,3,4],"tag":[2,3],"tag_entri":3,"take":[2,3],"thei":[2,3],"them":[2,3],"thi":[2,3,4,5],"three":0,"time":[2,3,4],"timestamp":[0,2,3],"timestamp_part":2,"titl":2,"togeth":[2,3],"tool":5,"total":4,"track":[0,2,3],"track1":3,"track2":3,"track3":3,"track_codec":3,"track_id":[2,3],"track_nam":3,"track_num":2,"track_num_1":2,"track_num_2":2,"track_tag":2,"track_typ":3,"true":[2,3,5],"tup":2,"tupl":2,"two":2,"type":[1,2,3,4,5],"typeerror":[2,3,5],"uniqu":2,"unless":[2,3],"unspecifi":2,"us":[0,1,2,3,4,5],"user":3,"valid":[2,5],"valu":[3,4],"valueerror":[2,3,5],"variabl":[2,3],"veri":2,"verif":0,"verifi":[2,4,5],"verify_matroska":5,"verify_mkvmerg":5,"verify_recogn":5,"verify_support":5,"version":2,"video":[2,3],"warn":2,"welcom":0,"when":[1,2,3],"where":[2,3,4],"whether":5,"which":[1,3,5],"while":3,"within":[1,2,3],"write":2,"you":[0,2,3],"your":[2,3],"zero":[2,4,5]},"titles":["pymkv2","MKVAttachment","MKVFile","MKVTrack","Timestamp","Verifications"],"titleterms":{"advanc":5,"basic":5,"core":5,"exampl":5,"file":5,"format":5,"function":5,"indic":0,"instal":0,"mkvattach":1,"mkvfile":2,"mkvtoolnix":5,"mkvtrack":3,"modul":0,"note":3,"path":5,"pymkv2":0,"tabl":0,"timestamp":4,"usag":5,"util":5,"verif":5}})