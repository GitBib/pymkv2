[project]
name = "pymkv2"
version = "2.1.2"
description = "A Python wrapper for mkvmerge. It provides support for muxing, splitting, linking, chapters, tags, and attachments through the use of mkvmerge."
authors = [
    {name = "GitBib", email = "job@bnff.website"},
    {name = "Sheldon Woodward", email = "me@sheldonw.com"},
]
license = {text = "MIT"}
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Video :: Conversion",
    "Topic :: Utilities",
]
keywords = [
    "wrapper",
]
requires-python = "<4.0,>=3.9"
dependencies = [
    "bitmath==1.3.3.1",
    "bcp47==0.1.0",
    "python-iso639<2026.0.0,>=2024.4.27",
]

[dependency-groups]
dev = [
    "pre-commit<5.0.0,>=4.0.1",
    "Sphinx<9.0.0,>=8.1.3; python_version == \"3.13\"",
    "pytest<9.0.0,>=8.3.4",
    "pytest-cov>=6.0.0,<8.0.0",
    "pytest-ruff<1.0.0,>=0.4.1",
    "pytest-mypy>=0.10.3,<2.0.0",
    "mypy<2.0.0,>=1.14.1",
    "ruff<1.0.0,>=0.14.0",
    "sphinx-immaterial<0.14.0,>=0.12.4; python_version == \"3.13\"",
    "pyinstrument>=5.1.1",
]

[project.urls]
homepage = "https://github.com/GitBib/pymkv2"

[tool.pdm.build]
includes = ["pymkv"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
addopts = "--doctest-modules --mypy --ruff --ruff-format"

[[tool.mypy.overrides]]
module = ["bcp47.*", "bitmath.*", "iso639.*"]
ignore_missing_imports = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]

line-length = 120
indent-width = 4
target-version = "py39"
namespace-packages = ["docs/source"]

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "C4",
  "DTZ",
  "T10",
  "EM",
  "EXE",
  "FA",
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  "PERF",
  "RUF"
]
ignore = [
  "N999",
  "FBT002",
  "FBT001",
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
   "TC003", # Ignore moving imports into a type-checking block.
   "C901" # too complex
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false

[tool.ruff.lint.pylint]
max-statements = 82
max-branches = 40
